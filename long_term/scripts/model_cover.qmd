---
title: "Model change"
format: html
editor: visual
---

## Libraries & Functions

```{r}
library(tidyverse)
library(here)
library(RColorBrewer)
library(brms)
library(tidybayes)
library(patchwork)
library(bayesplot)
library(ggragged)
library(ggridges)


#make colours less intense
make_pastel <- function(cols, n = 0.4){
  
  names <- names(cols)
  
  cols <- col2rgb(cols)
  
# transform to HSV space
  cols <- rgb2hsv(cols)
  
  cols <- hsv(cols[1,], cols[2,]*n, cols[3,])
  
  names(cols) <- names
  
  return(cols)
}


theme_andi <- function(){
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(), 
        strip.background = element_blank(),
        axis.line = element_line(colour = "black" ))
}

brms_summary <- function(x) {
      posterior::summarise_draws(x, "mean", "sd",  ~quantile(.x, probs = c(0.025, 0.975)))
    }


predict_before_after <- function(.model, .data, .get_summary = FALSE, ...){ 
  
  # Get a list of quoted dots
  group_vars <- enquos(...)  
  
  # get years 
  years <-  .data$year %>% unique()
  
  # check if only 2 year in data
  if(length(years) != 2){stop(paste("Only two years allowed but", length(years != 2), "provided"))}
  
  
  year_1 <- sym(as.character(years[1]))
  year_2 <- sym(as.character(years[2]))
  
  #make new df
  
    new_data <- .data %>% 
    dplyr::select(!!!group_vars, year) %>% 
    distinct() %>% 
    mutate(row = 1:n())

  
  

  # predict data

  post_pred <- fitted(.model,
                      newdata = new_data,
                      summary = F) %>%
    # convert the results to a data frame
    data.frame() %>%
    # rename the columns
    set_names(pull(new_data, row)) %>%
    # add a numeric index for the MCMC draws
    mutate(draw = 1:n()) %>%
    # convert to the long format
    pivot_longer(-draw) %>%
    # convert the row column from the character format to the numeric format
    mutate(row = as.double(name)) %>%
    # join the nd predictor grid to the output
    left_join(new_data, by = "row") %>%
    # drop two of the columns which are now unnecessary
     select(-name, -row) %>%
    # convert to a wider format so we can compute the contrast
    pivot_wider(names_from = year, values_from = value) %>%
    # compute the ATE contrast
     mutate(tau = !!year_2 - !!year_1) %>%
    # # compute the average ATE value within each MCMC draw
      group_by(draw, !!!group_vars) %>%
    summarise(ate = mean(tau)) %>%
    # # remove the draw index column
     ungroup() %>%
     select(ate, !!!group_vars)
  
  if(.get_summary){
    
    post_pred <- post_pred %>%
      group_by(!!!group_vars) %>%
      brms_summary()
  }


  return(post_pred)

}
```

```{r}
dat <- readRDS(here("long_term/data/clean/clean_MooreaMPA.rds"))
dat_meta <- read.csv(here("long_term/data/clean/moorea_mpa_site_metadata.csv"))
```

Some overview plots

## Benthic groups

```{r}

# make data, nicer groups

dat_benthic_gr <- dat %>% 
  group_by(year, date, marine_area, habitat, transect, benthic_group) %>% 
  summarise(proportion = sum(proportion, na.rm = T)) %>% 
  ungroup() %>% 
  mutate(benthic_group = recode(benthic_group, 
                                dead_coral = "Dead coral",
                                cyanos = "Cyanobacteria",
                                coral = "Coral",
                                macro_alga = "Macroalga",
                                other = "Other",
                                substrate = "Substrate",
                                turf = "Turf"
                                	)) %>% 
  mutate(benthic_group = fct_relevel(benthic_group, 
                                     "Coral",
                                     "Dead coral",
                                     "Other",
                                     "Macroalga",
                                     "Turf",
                                     "Cyanobacteria",
                                     "Substrate")) %>% 
  mutate(benthic_group = fct_rev(benthic_group))

#cols

benthic_group_cols <- c("Dead coral" = "grey",
                        "Cyanobacteria" = "#CC79A7",
                        "Coral" = "#E69F00",
                        "Macroalga" = "#009E73",
                        "Other" = "#0072B2",
                        "Substrate" = "white",
                        "Turf" = "#D55E00") %>% 
   make_pastel(n = 0.6)





plot_benthic_cover <- dat_benthic_gr %>% 
  left_join(dat_meta, by = "marine_area") %>% 
  filter(habitat == "Outer slope") %>% 
  group_by(across(c(-proportion, -transect))) %>%  
  summarise(cover_perc = mean(proportion*100, na.rm = T)) %>% 
  ungroup() %>% 
  mutate(coast = factor(coast, levels = c("West", "North", "East"))) %>% 
  filter(benthic_group != "Substrate") %>% 
  ggplot()+
  geom_area(aes(fill = benthic_group, x = as.Date(date), y = cover_perc))+
  scale_fill_manual(values = benthic_group_cols)+
  guides(fill=guide_legend(title="Benthic group"))+
  geom_vline(aes(xintercept = as.Date(date)), col = "white", linewidth = 0.1)+
  
  scale_x_date(breaks = "2 years", date_labels = "%y")+
  
  labs(x = "Year", y = "Benthic cover (%)")+
  
  
  facet_ragged_cols(vars(marine_area), vars(coast))+
  theme_minimal()+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        axis.ticks = element_line(colour = "black", size = 0.2))+
  theme(legend.position = "bottom", 
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
        panel.border = element_rect(fill=NA));plot_benthic_cover

ggsave(filename = "benthic_cover.pdf",
       plot = plot_benthic_cover, 
       path = here("long_term/plots/"),
       width = 20, height = 15, units  = "cm")
 
```

## Coral cover

-   only outer slope

```{r}
dat_c <- dat %>% 
  filter(benthic_group == "coral", habitat == "Outer slope")
```

top 5 corals

```{r}
top_5_corals <- dat_c %>% 
  filter(proportion > 0) %>% 
  group_by(substrate) %>% 
  summarise(n_total = n()) %>% 
  arrange(-n_total) %>% 
  slice(1:5) %>% 
  pull(substrate)
```

dump into others, re-calculate cover

```{r}
dat_c <- dat_c %>% 
    left_join(dat_meta, by = "marine_area") %>% 
  mutate(genus = ifelse(substrate %in% top_5_corals, substrate, "Other")) %>% 
  select(-substrate) %>% 
  group_by(across(c(-proportion))) %>% 
  summarise(proportion = sum(proportion, na.rm = T)) %>% 
  ungroup() %>% 
  pivot_wider(names_from = genus, values_from = proportion, values_fill = 0) %>% 
  select(-benthic_group, -habitat) %>% 
  pivot_longer(cols = 10:ncol(.),names_to = "genus", values_to = "proportion") %>% 
  mutate(genus = fct_relevel(genus, "Other", after = Inf)) #set others to end
```

Plot

```{r}

cols_genera <- c(brewer.pal(11, "Set3")[c(1,3,5:7)], "grey70")#last = "Other" to white

plot_coral_cover <- dat_c %>% 
  group_by(across(c(-proportion, -transect))) %>%  
  summarise(cover_perc = mean(proportion*100, na.rm = T)) %>% 
  ungroup() %>% 
   mutate(coast = factor(coast, levels = c("West", "North", "East"))) %>% 
  ggplot()+

  geom_area(aes(fill = genus, x = as.Date(date), y = cover_perc))+
  scale_fill_manual(values = cols_genera)+
  guides(fill=guide_legend(title="Genus"))+

  geom_vline(aes(xintercept = as.Date(date)), col = "white", linewidth = 0.1)+
  
  scale_x_date(breaks = "2 years", date_labels = "%y")+
  
  labs(x = "Year", y = "Benthic cover (%)")+
  
  facet_ragged_cols(vars(marine_area), vars(coast))+
  theme_minimal()+
  theme(legend.position = "bottom", 
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.ticks = element_line(colour = "black", size = 0.2),
        panel.border = element_rect(fill=NA));plot_coral_cover
```

```{r}
ggsave(filename = "coralgenera_cover.pdf",
       plot = plot_coral_cover, 
       path = here("long_term/plots/"),
       width = 20, height = 15, units  = "cm")
 
```

## Model Delta

### Changes coral cover outer reef

```{r}
dat_coral_delta <- dat_benthic_gr %>% 
  filter(habitat == "Outer slope", benthic_group == "Coral") %>% 
  select(- habitat, -benthic_group) %>% 
  filter(year > 2018) %>% 
  mutate(year = as.factor(year))
```

Check always 3 reps

```{r}
dat_coral_delta %>% 
  group_by(marine_area, year) %>% 
  summarise(n = n()) %>% 
  filter(n!=3)
#all good
```

Check range of proportion to test if 0 / 1 (not defined for beta distribution =\> either ordered beta regression or replace)

```{r}
dat_coral_delta %>% 
  pull(proportion) %>% 
  range()
```

No need to deal with 0s

get DHW data at add

```{r}
dat_dhw <- read.csv(here("dhw/data/dat_sites_maxdhw_mur.csv"))


sites_1 <- unique(dat_coral_delta$marine_area)
sites_2 <- unique(dat_dhw$site)

sites_1[which(!sites_1 %in% sites_2)]
sites_2[which(!sites_2 %in% sites_1)]

# rename dat_coral_delta sites

dat_coral_delta <- dat_coral_delta %>% 
  mutate(marine_area = case_when(marine_area == "Entre 2 baies" ~  "Entre 2 baies",
                                 marine_area == "Haapiti" ~  "Ha'apiti",
                                 marine_area == "Maatea" ~  "Ma'atea",
                                 marine_area == "Pihaena" ~ "Piha'ena",
                                 marine_area == "Temae" ~ "Tema'e",
                          .default = marine_area)) 

dat_dhw <- dat_dhw %>% 
  mutate(site = ifelse(site == "Entre 2 baies", "Entre 2 baies", site ))

dat_coral_delta <- dat_coral_delta %>% 
  left_join(dat_dhw, by = c("marine_area" = "site")) 

```

One model per group of years because I expect sometimes an increase and sometimes a decrease in cover between the years and I am interested in the short-term changes, not the overall effect.

-   `as.numeric(factor(year))` to code the yeas as `1` and `2`

-   `0 +` in formula because predictors are not centered

```{r}

m_ccover_19 <- brm(bf(proportion ~  0 + marine_area + 
                         (1 + factor(year)|marine_area),
                       phi ~  (1 + factor(year)|marine_area)),
                family = Beta(),
                data = dat_coral_delta %>% 
                  filter(year %in% 2019:2020),
                init = 0,
                iter = 4000,
                warmup = 2000,
                chains = 4,
                cores = 4,
                control = list(adapt_delta = 0.99, 
                               max_treedepth = 20),
                threads = threading(2, static = T),
                seed = 123,
                file = here("long_term/models/m_ccover_19"),
                backend = "cmdstanr")

m_ccover_20 <- brm(bf(proportion ~  0 + marine_area + 
                         (1 + factor(year)|marine_area),
                       phi ~  (1 + factor(year)|marine_area)),
                family = Beta(),
                data = dat_coral_delta %>% 
                  filter(year %in% 2020:2021),
                init = 0,
                iter = 4000,
                warmup = 2000,
                chains = 4,
                cores = 4,
                control = list(adapt_delta = 0.99, 
                               max_treedepth = 20),
                threads = threading(2, static = T),
                seed = 123,
                file = here("long_term/models/m_ccover_20"),
                backend = "cmdstanr")

m_ccover_21 <- brm(bf(proportion ~  0 + marine_area + 
                         (1 + factor(year)|marine_area),
                       phi ~  (1 + factor(year)|marine_area)),
                family = Beta(),
                data = dat_coral_delta %>% 
                  filter(year %in% 2021:2022),
                init = 0,
                iter = 4000,
                warmup = 2000,
                chains = 4,
                cores = 4,
                control = list(adapt_delta = 0.99, 
                               max_treedepth = 20),
                threads = threading(2, static = T),
                seed = 123,
                file = here("long_term/models/m_ccover_21"),
                backend = "cmdstanr")

m_ccover_22 <- brm(bf(proportion ~  0 + marine_area + 
                         (1 + factor(year)|marine_area),
                       phi ~  (1 + factor(year)|marine_area)),
                family = Beta(),
                data = dat_coral_delta %>% 
                  filter(year %in% 2022:2023),
                init = 0,
                iter = 4000,
                warmup = 2000,
                chains = 4,
                cores = 4,
                control = list(adapt_delta = 0.99, 
                               max_treedepth = 20),
                threads = threading(2, static = T),
                seed = 123,
                file = here("long_term/models/m_ccover_22"),
                backend = "cmdstanr")
# some divergent transitions. 
# try non centered 

m_ccover_22_nc <- brm(bf(proportion ~  1 + marine_area + 
                         (1 + factor(year)|marine_area),
                       phi ~  (1 + factor(year)|marine_area)),
                family = Beta(),
                data = dat_coral_delta %>% 
                  filter(year %in% 2022:2023),
                init = 0,
                iter = 4000,
                warmup = 2000,
                chains = 4,
                cores = 4,
                control = list(adapt_delta = 0.99, 
                               max_treedepth = 20),
                threads = threading(2, static = T),
                seed = 123,
                file = here("long_term/models/m_ccover_22_nc"),
                backend = "cmdstanr")
```

```{r}
summary(m_ccover_19)
pp_check(m_ccover_19, ndraws = 100)
bayes_R2(m_ccover_19)

summary(m_ccover_20)
pp_check(m_ccover_20, ndraws = 100)
bayes_R2(m_ccover_20)

summary(m_ccover_21)
pp_check(m_ccover_21, ndraws = 100)
bayes_R2(m_ccover_21)

summary(m_ccover_22)
pp_check(m_ccover_22, ndraws = 100)
bayes_R2(m_ccover_22)

```

### Plot model

Predict data

```{r}
pred_19 <- predict_before_after(.data = dat_coral_delta %>% 
                       filter(year %in% 2019:2020) %>% 
                       droplevels(), 
                     .model = m_ccover_19, 
                     .get_summary = F,
                     marine_area) %>% 
  left_join(dat_dhw, by = c("marine_area" = "site")) %>% 
  mutate(comparison = "2019 - 2020")
  

pred_20 <- predict_before_after(.data = dat_coral_delta %>% 
                       filter(year %in% 2020:2021) %>% 
                       droplevels(), 
                     .model = m_ccover_20, 
                     .get_summary = F, 
                     marine_area) %>% 
  left_join(dat_dhw, by = c("marine_area" = "site")) %>% 
  mutate(comparison = "2020 - 2021")
  
pred_21 <- predict_before_after(.data = dat_coral_delta %>% 
                       filter(year %in% 2021:2022) %>% 
                       droplevels(), 
                     .model = m_ccover_21, 
                     .get_summary = F, 
                     marine_area) %>% 
  left_join(dat_dhw, by = c("marine_area" = "site")) %>% 
  mutate(comparison = "2021 - 2022")
 
pred_22 <- predict_before_after(.data = dat_coral_delta %>% 
                       filter(year %in% 2022:2023) %>% 
                       droplevels(), 
                     .model = m_ccover_22, 
                     .get_summary = F, 
                     marine_area) %>% 
  left_join(dat_dhw, by = c("marine_area" = "site")) %>% 
  mutate(comparison = "2022 - 2023") 


pred <- bind_rows(pred_19,
                  pred_20,
                  pred_21,
                  pred_22) %>% 
    mutate(coast = factor(coast, levels = c("West", "North", "East"))) %>% 
  group_by(coast) %>% 
  mutate(marine_area = fct_reorder(.f = marine_area, .x = ate, .fun = mean)) %>% 
  ungroup()
  

```

Plot: Per site

```{r}
cols_years <- c("#D55E00", "#E69F00", "#56B4E9", "#009E73") %>% 
  make_pastel(n = 0.6)


plot_change_site <- pred %>% 
  ggplot(aes(y = marine_area, 
             x = ate*100,
             col = comparison,
             fill = comparison)) +
  geom_vline(xintercept = 0, linetype = "11")+
  geom_density_ridges(,scale = 1.8, alpha = .5)+
  scale_fill_manual(values = cols_years, name = NULL)+
  scale_colour_manual(values = cols_years, name = NULL)+

  facet_wrap(~coast, scales = "free_y")+
 # lims(x = c(-75, 25))+
  labs(x = expression(Delta~"Cover (%"~yr^-1*")"), y = NULL)+
  scale_y_discrete(limits=rev)+
  theme_minimal()+
  theme(
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank(),
    axis.ticks = element_line(colour = "black", size = 0.2),
    panel.border = element_rect(fill=NA))+
  theme(legend.position = "bottom")
plot_change_site

ggsave(filename = "plot_change_site.pdf",
       plot = plot_change_site, 
       path = here("long_term/plots/"),
       width = 20, height = 15, units  = "cm")
```

Per coast

```{r}
plot_change_coast <- pred %>%
  ggplot(aes(y = comparison, 
             x = ate*100,
             col = comparison, 
             fill = comparison)) +
  geom_vline(xintercept = 0, linetype = "11")+
   geom_density_ridges(rel_min_height = 0.02,scale = 1.8, alpha = .5)+
  scale_fill_manual(values = cols_years, name = NULL)+
  scale_colour_manual(values = cols_years, name = NULL)+
  
  facet_ragged_cols(rows = vars(marine_area),
                    cols =  vars(coast), )+
  labs(x = expression(Delta~"Cover (%"~yr^-1*")"), y = NULL)+
  scale_y_discrete(limits=rev)+
  theme_minimal()+
  theme(#axis.text.y=element_blank(),
       # axis.ticks.y=element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.ticks = element_line(colour = "black", size = 0.2),
        panel.border = element_rect(fill=NA))+
  theme(axis.text.y = element_text(colour = rev(cols_years)))+
  theme(legend.position = "none")
plot_change_coast


ggsave(filename = "plot_change_coast.pdf",
       plot = plot_change_coast, 
       path = here("long_term/plots/"),
       width = 20, height = 15, units  = "cm")
```

Combined per coast

```{r}
col_coast = c("West" = "#0A9F9DFF", 
              "North" = "#CEB175FF", 
              "East" = "#E54E21FF")


plot_change_coast2 <- pred %>%
  ggplot(aes(y = coast, 
             x = ate*100,
             col = coast, 
             fill = coast)) +
  geom_vline(xintercept = 0, linetype = "11")+
  geom_density_ridges(rel_min_height = 0.02,scale = 1.8, alpha = .5)+
  scale_fill_manual(values = col_coast, name = NULL)+
  scale_colour_manual(values = col_coast, name = NULL)+
  facet_wrap(~comparison, ncol = 1)+
  labs(x = expression(Delta~"Cover (%"~yr^-1*")"), y = NULL)+
  scale_y_discrete(limits=rev, expand = expansion(add = c(0.5, 2)))+
  theme_minimal()+
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.ticks = element_line(colour = "black", size = 0.2),
        panel.border = element_rect(fill=NA))+
  theme(axis.text.y = element_text(colour = rev(col_coast)))+
  theme(legend.position = "none")
plot_change_coast2

ggsave(filename = "plot_change_coast2.pdf",
       plot = plot_change_coast2, 
       path = here("long_term/plots/"),
       width = 10, height = 15, units  = "cm")
```

## DHW

additionally include `max_dhw_29`

-   if 0 + max_dhw_29 only overall slope. I want slope per year

```{r}
m_ccover_19_dhw <- brm(bf(proportion ~  0 + max_dhw_29 * factor(year) + 
                         (1 + factor(year)|marine_area),
                       phi ~  (1 + factor(year)|marine_area)),
                family = Beta(),
                data = dat_coral_delta %>% 
                  filter(year %in% 2019:2020),
                init = 0,
                iter = 4000,
                warmup = 2000,
                chains = 4,
                cores = 4,
                control = list(adapt_delta = 0.9),
                threads = threading(2, static = T),
                seed = 123,
                file = here("long_term/models/m_ccover_19_dhw"),
                backend = "cmdstanr")
```

```{r}
summary(m_ccover_19_dhw)
pp_check(m_ccover_19_dhw, ndraws = 100)
bayes_R2(m_ccover_19_dhw)
```

### Plot

```{r}

new_data_dhw <- expand_grid(max_dhw_29 = seq(min(dat_coral_delta$max_dhw_29)-0.1, 
                                     max(dat_coral_delta$max_dhw_29)+0.1, 
                                     length = 100),
                            year = factor(2019:2020))

pred_dhw <-  epred_draws(m_ccover_19_dhw, newdata = new_data_dhw, re_formula = NA) %>% 
  ungroup() %>% 
  select(max_dhw_29, .draw, .epred, year) %>% 
  pivot_wider(names_from = year, values_from = .epred) %>% 
  mutate(delta = (`2020` - `2019`))
  #mutate(delta =  `2020`)

pred_dhwS <- pred_dhw %>% 
  group_by(max_dhw_29) %>% 
  summarise(median = median(delta, na.rm = T),
            l95 = quantile(delta, 0.025, na.rm = T),
            u95 = quantile(delta, 0.975, na.rm = T),
            
            l80 = quantile(delta, 0.1, na.rm = T),
            u80 = quantile(delta, 0.9, na.rm = T),
            
            l60 = quantile(delta, 0.2, na.rm = T),
            u60 = quantile(delta, 0.8, na.rm = T)) %>% 
  ungroup()

dat_sel_dhwS <- dat_coral_delta %>% 
  select(marine_area, proportion, year, coast, max_dhw_29) %>% 
  filter(year %in% c(2019:2020)) %>% 
  pivot_wider(names_from = year, values_from = proportion, values_fn = mean) %>% 
  mutate(delta =  `2020`- `2019`)  
  


plot_dhw <- pred_dhwS %>%
  ggplot(aes(x = max_dhw_29))+
  geom_hline(yintercept = 0, linetype = "11", col = "grey")+
  geom_ribbon(aes(ymin = l95, ymax = u95), alpha = .3, fill = "darkblue")+
  geom_ribbon(aes(ymin = l80, ymax = u80), alpha = .3, fill = "darkblue")+
  geom_ribbon(aes(ymin = l60, ymax = u60), alpha = .3, fill = "darkblue")+
  geom_line(aes(y = median), col = "skyblue", linewidth = 1)+
  geom_point(data = dat_sel_dhwS, aes(x = max_dhw_29, y = delta, fill = coast), 
             size = 2.5, shape = 21, col = "grey90")+
  scale_fill_manual(values = col_coast, name = NULL)+
  labs(y = expression(Delta~"Cover (%"~yr^-1*")"), x = "max. DHW")+
  guides(fill=guide_legend(title="Coast"))+
  theme_andi()+
  theme(legend.position = "bottom",
        plot.title = element_text(face = "bold", hjust = 0.5))


plot_dhw
```

```{r}
ggsave(filename = "cover_regression_dhw.pdf",
       plot = plot_dhw, 
       path = here("long_term/plots/"),
       width = 15, height = 10, units  = "cm")
```

assuming linear relationship over whole course

calculate for min and max in data

```{r}


slope <- epred_draws(m_ccover_19_dhw, 
                         re_formula = NA,
                         newdata = 
  expand_grid(max_dhw_29 = c(min(dat_coral_delta$max_dhw_29),
                             max(dat_coral_delta$max_dhw_29)),
              year = factor(2019:2020))) %>% 
  ungroup() %>% 
  select(max_dhw_29, year, .epred, .draw) %>% 
  pivot_wider(names_from = year, values_from = .epred) %>% 
  mutate(delta =  `2020`- `2019`) %>% 
  select(delta, max_dhw_29, .draw) %>% 
  pivot_wider(names_from = max_dhw_29, values_from = delta) %>% 
  mutate(slope_val = (`6.26471428571429` - `5.765`) / (6.26471428571429 - 5.765) )

slope %>%
  select(slope_val) %>% 
  brms_summary()

above_0 <- length(which(slope$slope_val > 0))/nrow(slope) %>% 
  round(2)#0



plot_slope<- slope %>%
  ggplot(aes(y = 1, 
             x = slope_val))+
  geom_density_ridges_gradient(fill = "#A4BED5FF")+
  geom_vline(xintercept = 0, linetype = "11")+
  labs(x = expression(Delta~"% cover"~yr^-1~DHW^-1), y = NULL)+
  scale_fill_manual(values = cols, name = NULL)+
  theme_andi()+
  theme(legend.position = "none")

plot_slope
```

```{r}
ggsave(filename = "plot_slope.pdf",
       plot = plot_slope, 
       path = here("long_term/plots/"),
       width = 15, height = 10, units  = "cm")
```
