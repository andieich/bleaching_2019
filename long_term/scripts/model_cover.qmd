---
title: "Model change"
format: html
editor: visual
---

## Libraries & Functions

```{r}
library(tidyverse)
library(here)
library(RColorBrewer)
library(brms)
library(tidybayes)
library(patchwork)
library(bayesplot)
library(ggragged)
library(ggridges)


#make colours less intense
make_pastel <- function(cols, n = 0.4){
  names <- names(cols)
  cols <- col2rgb(cols)
# transform to HSV space
  cols <- rgb2hsv(cols)
  cols <- hsv(cols[1,], cols[2,]*n, cols[3,])
  names(cols) <- names
  return(cols)
}

# theme for ggplots
theme_andi <- function(){
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(), 
        strip.background = element_blank(),
        axis.line = element_line(colour = "black" ))
}

# get summary for posterior distributions
brms_summary <- function(x) {
      posterior::summarise_draws(x, "mean", "sd",  ~quantile(.x, probs = c(0.025, 0.975)))
    }


# predict data from model to calculate difference in coral cover between two years

predict_before_after <- function(.model, .data, .get_summary = FALSE, ...){ 
  # grouping varaibles are saved in ...
  
  # Get a list of quoted dots
  group_vars <- enquos(...)  
  
  # get years 
  years <-  .data$year %>% unique()
  
  # check if only 2 year in data
  if(length(years) != 2){stop(paste("Only two years allowed but", length(years != 2), "provided"))}
  
  
  year_1 <- sym(as.character(years[1]))
  year_2 <- sym(as.character(years[2]))
  
  #make new df for predictions
  new_data <- .data %>% 
  dplyr::select(!!!group_vars, year) %>% 
  distinct() %>% 
  mutate(row = 1:n())

  # predict data
  post_pred <- fitted(.model,
                      newdata = new_data,
                      summary = F) %>%
    # convert the results to a data frame
    data.frame() %>%
    # rename the columns
    set_names(pull(new_data, row)) %>%
    # add a numeric index for the MCMC draws
    mutate(draw = 1:n()) %>%
    # convert to the long format
    pivot_longer(-draw) %>%
    # convert the row column from the character format to the numeric format
    mutate(row = as.double(name)) %>%
    # join the nd predictor grid to the output
    left_join(new_data, by = "row") %>%
    # drop two of the columns which are now unnecessary
     dplyr::select(-name, -row) %>%
    # convert to a wider format so we can compute the contrast
    pivot_wider(names_from = year, values_from = value) %>%
    # compute the ATE contrast
     mutate(tau = !!year_2 - !!year_1) %>%
    # compute the average ATE value within each MCMC draw
    group_by(draw, !!!group_vars) %>%
    summarise(ate = mean(tau)) %>%
    # remove the draw index column
    ungroup() %>%
    dplyr::select(ate, !!!group_vars)
  
  # summarise if wanted
  if(.get_summary){
    post_pred <- post_pred %>%
      group_by(!!!group_vars) %>%
      brms_summary()
  }

  return(post_pred)

}
```

## Get data

```{r}
dat <- readRDS(here("long_term/data/clean/clean_MooreaMPA.rds"))
dat_meta <- read.csv(here("long_term/data/clean/moorea_mpa_site_metadata.csv"))
```

## Plot Overview

### Benthic groups

```{r}
# nicer groups

dat_benthic_gr <- dat %>% 
  group_by(year, date, marine_area, habitat, transect, benthic_group) %>% 
  summarise(proportion = sum(proportion, na.rm = T)) %>% 
  ungroup() %>% 
  mutate(benthic_group = recode(benthic_group, 
                                dead_coral = "Dead coral",
                                cyanos = "Cyanobacteria",
                                coral = "Coral",
                                macro_alga = "Macroalga",
                                other = "Other",
                                substrate = "Substrate",
                                turf = "Turf"
                                	)) %>% 
  mutate(benthic_group = fct_relevel(benthic_group, 
                                     "Coral",
                                     "Dead coral",
                                     "Other",
                                     "Macroalga",
                                     "Turf",
                                     "Cyanobacteria",
                                     "Substrate")) %>% 
  mutate(benthic_group = fct_rev(benthic_group))

#cols

benthic_group_cols <- c("Dead coral" = "grey",
                        "Cyanobacteria" = "#CC79A7",
                        "Coral" = "#E69F00",
                        "Macroalga" = "#009E73",
                        "Other" = "#0072B2",
                        "Substrate" = "white",
                        "Turf" = "#D55E00") %>% 
   make_pastel(n = 0.6)


# plot data for outer slope
plot_benthic_cover <- dat_benthic_gr %>% 
  left_join(dat_meta, by = "marine_area") %>% 
  filter(habitat == "Outer slope") %>% 
  group_by(across(c(-proportion, -transect))) %>%  
  summarise(cover_perc = mean(proportion*100, na.rm = T)) %>% 
  ungroup() %>% 
  mutate(coast = factor(coast, levels = c("West", "North", "East"))) %>% 
  filter(benthic_group != "Substrate") %>% 
  ggplot()+
  geom_area(aes(fill = benthic_group, x = as.Date(date), y = cover_perc))+
  scale_fill_manual(values = benthic_group_cols)+
  guides(fill=guide_legend(title="Benthic group"))+
  geom_vline(aes(xintercept = as.Date(date)), col = "white", linewidth = 0.1)+
  scale_x_date(breaks = "2 years", date_labels = "%y")+
  labs(x = "Year", y = "Benthic cover (%)")+
  facet_ragged_cols(vars(marine_area), vars(coast))+
  theme_minimal()+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        axis.ticks = element_line(colour = "black", size = 0.2))+
  theme(legend.position = "bottom", 
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
        panel.border = element_rect(fill=NA));plot_benthic_cover

ggsave(filename = "benthic_cover.pdf",
       plot = plot_benthic_cover, 
       path = here("long_term/plots/"),
       width = 20, height = 15, units  = "cm")
 
```

### Coral cover

Filter data for outer slope

```{r}
dat_c <- dat %>% 
  filter(benthic_group == "coral", habitat == "Outer slope")
```

Get 5 most common coral genera

```{r}
top_5_corals <- dat_c %>% 
  filter(proportion > 0) %>% 
  group_by(substrate) %>% 
  summarise(n_total = n()) %>% 
  arrange(-n_total) %>% 
  slice(1:5) %>% 
  pull(substrate)
```

Dump remaining genera into "Others", re-calculate cover

```{r}
dat_c <- dat_c %>% 
    left_join(dat_meta, by = "marine_area") %>% 
  mutate(genus = ifelse(substrate %in% top_5_corals, substrate, "Other")) %>% 
  dplyr::select(-substrate) %>% 
  group_by(across(c(-proportion))) %>% 
  summarise(proportion = sum(proportion, na.rm = T)) %>% 
  ungroup() %>% 
  pivot_wider(names_from = genus, values_from = proportion, values_fill = 0) %>% 
  dplyr::select(-benthic_group, -habitat) %>% 
  pivot_longer(cols = 10:ncol(.),names_to = "genus", values_to = "proportion") %>% 
  mutate(genus = fct_relevel(genus, "Other", after = Inf)) #set others to end
```

Plot

```{r}

cols_genera <- c(brewer.pal(11, "Set3")[c(1,3,5:7)], "grey70")#last = "Other" to white
names(cols_genera) <- c(top_5_corals, "Other")

plot_coral_cover <- dat_c %>% 
  group_by(across(c(-proportion, -transect))) %>%  
  summarise(cover_perc = mean(proportion*100, na.rm = T)) %>% 
  ungroup() %>% 
   mutate(coast = factor(coast, levels = c("West", "North", "East"))) %>% 
  ggplot()+
  geom_area(aes(fill = genus, x = as.Date(date), y = cover_perc))+
  scale_fill_manual(values = cols_genera)+
  guides(fill=guide_legend(title="Genus"))+
  geom_vline(aes(xintercept = as.Date(date)), col = "white", linewidth = 0.1)+
  scale_x_date(breaks = "2 years", date_labels = "%y")+
  labs(x = "Year", y = "Benthic cover (%)")+
  facet_ragged_cols(vars(marine_area), vars(coast))+
  theme_minimal()+
  theme(legend.position = "bottom", 
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.ticks = element_line(colour = "black", size = 0.2),
        panel.border = element_rect(fill=NA));plot_coral_cover


ggsave(filename = "coralgenera_cover.pdf",
       plot = plot_coral_cover, 
       path = here("long_term/plots/"),
       width = 20, height = 15, units  = "cm")
```

## Model Delta Cover

### Get data for change in coral cover outer reef

Filter data, only outer slope, corals, and data for 2019 ff

```{r}
dat_coral_delta <- dat_benthic_gr %>% 
  filter(habitat == "Outer slope", benthic_group == "Coral") %>% 
  dplyr::select(- habitat, -benthic_group) %>% 
  filter(year > 2018) %>% 
  mutate(year = as.factor(year))
```

Always 3 replicates?

```{r}
dat_coral_delta %>% 
  group_by(marine_area, year) %>% 
  summarise(n = n()) %>% 
  filter(n!=3)
#all good
```

Check range of `proportion` (Beta distribution not defined for 0 and 1).

```{r}
dat_coral_delta %>% 
  pull(proportion) %>% 
  range()
```

No need to deal with 0s

Get DHW data at to data. Names of sites differ and needs to be aligned

```{r}
dat_dhw <- read.csv(here("dhw/data/dat_sites_maxdhw_mur.csv"))


sites_1 <- unique(dat_coral_delta$marine_area)
sites_2 <- unique(dat_dhw$site)

sites_1[which(!sites_1 %in% sites_2)]
sites_2[which(!sites_2 %in% sites_1)]

# rename dat_coral_delta sites

dat_coral_delta <- dat_coral_delta %>% 
  mutate(marine_area = case_when(marine_area == "Entre 2 baies" ~  "Entre 2 baies",
                                 marine_area == "Haapiti" ~  "Ha'apiti",
                                 marine_area == "Maatea" ~  "Ma'atea",
                                 marine_area == "Pihaena" ~ "Piha'ena",
                                 marine_area == "Temae" ~ "Tema'e",
                          .default = marine_area)) 

dat_dhw <- dat_dhw %>% 
  mutate(site = ifelse(site == "Entre 2 baies", "Entre 2 baies", site ))

dat_coral_delta <- dat_coral_delta %>% 
  left_join(dat_dhw, by = c("marine_area" = "site")) 

```

### Models

Model the cover per year and later calculate the differences

-   `0 +` in formula because predictors are not centered

```{r}

m_ccover <- brm(bf(proportion ~  0 + marine_area * factor(year) + 
                         (0 + factor(year)|marine_area),
                       phi ~  0 + marine_area * factor(year) + 
                         (0 + factor(year)|marine_area)),
                family = Beta(),
                data = dat_coral_delta,
                init = 0,
                iter = 4000,
                warmup = 2000,
                chains = 4,
                cores = 4,
                control = list(adapt_delta = 0.99, 
                               max_treedepth = 20),
                threads = threading(2, static = T),
                seed = 123,
                file = here("long_term/models/m_ccover"),
                backend = "cmdstanr")
```

```{r}
summary(m_ccover)#35Rhat etc ok
pp_check(m_ccover, ndraws = 100)#
bayes_R2(m_ccover)#0.79
```

### Plot model

Predict data

```{r}
#make new df
new_data <- dat_coral_delta %>% 
  dplyr::select(marine_area, coast, year) %>% 
  distinct() %>% 
  mutate(row = 1:n())

# predict data

post_pred <- fitted(m_ccover,
                    newdata = new_data,
                    summary = F) %>%
  # convert the results to a data frame
  data.frame() %>%
  # rename the columns
  set_names(pull(new_data, row)) %>%
  # add a numeric index for the MCMC draws
  mutate(draw = 1:n()) %>%
  # convert to the long format
  pivot_longer(-draw) %>%
  # convert the row column from the character format to the numeric format
  mutate(row = as.double(name)) %>%
  # join the nd predictor grid to the output
  left_join(new_data, by = "row") %>%
  # drop two of the columns which are now unnecessary
  dplyr::select(-name, -row) %>%
  # convert to a wider format so we can compute the contrast
  pivot_wider(names_from = year, values_from = value) %>%
  janitor::clean_names() %>% 
  # compute contrast
  mutate(delta_2020 = 100*(x2020)/x2019,
         delta_2021 = 100*(x2021)/x2019,
         delta_2022 = 100*(x2022)/x2019,
         delta_2023 = 100*(x2023)/x2019) %>%
  # # compute the average ATE value within each MCMC draw
  group_by(draw, marine_area, coast) %>%
  summarise(delta_2020 = mean(delta_2020),
            delta_2021 = mean(delta_2021),
            delta_2022 = mean(delta_2022),
            delta_2023 = mean(delta_2023)) %>%
  # # remove the draw index column
  ungroup() %>%
  dplyr::select(marine_area, coast, delta_2020, delta_2021, delta_2022, delta_2023) %>% 
  pivot_longer(delta_2020:delta_2023, names_to = "year", values_to = "percent") %>% 
  mutate(year = substr(year, 7, 10) %>% 
           as.numeric())
```

```{r}

post_predS <- post_pred %>% 
  bind_rows(expand_grid(coast = unique(post_pred$coast),
                       year = 2019,
                       percent = 100)) %>% 
  group_by(year, coast) %>% 
  summarise(median = median(percent),
            l_66 = quantile(percent, probs = (1-0.66)/2),
            u_66 = quantile(percent, probs = 1 - (1-0.66)/2),
            l_89 = quantile(percent, probs = (1-0.89)/2),
            u_89 = quantile(percent, probs = 1-(1-0.89)/2)
      )
```

y

```{r}

col_coast = c("West" = "#0A9F9DFF", 
              "North" = "#CEB175FF", 
              "East" = "#E54E21FF")


plot_change_cover <- post_predS %>%
  mutate(coast = fct_rev(coast)) %>% 
  ggplot(aes(x = year, col = coast))+
  geom_hline(yintercept = c(0, 50, 100), linetype = "11", col = "grey")+
  geom_line(aes(y = median), position = position_dodge(width = .1))+
  geom_errorbar(aes(ymin = l_89, ymax = u_89),width = 0, linewidth = .5, position = position_dodge(width = .1))+
  geom_errorbar(aes(ymin = l_66, ymax = u_66),width = 0, linewidth = 1, position = position_dodge(width = .1))+
  scale_colour_manual(values = col_coast, name = NULL)+
  geom_point(aes(y = median), position = position_dodge(width = .1))+
    labs( y = expression(Delta~"Cover"), x = NULL)+
    theme_andi()+
    theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        plot.title = element_text(hjust = 0.5, face="bold"),
        strip.text = element_text(face="bold"),
        legend.position = "bottom")
plot_change_cover




```

```{r}
ggsave(filename = "plot_change_cover.pdf",
       plot = plot_change_cover, 
       path = here("long_term/plots/"),
       width = 17, height = 9, units  = "cm")
```

## DHW

### Model

additionally include `max_dhw_29`

-   if 0 + max_dhw_29 only overall slope. I want slope per year

```{r}
m_ccover_19_dhw <- brm(bf(proportion ~  0 + max_dhw_29 * factor(year) + 
                         (0 + factor(year)|marine_area),
                       phi ~  (0 + factor(year)|marine_area)),
                family = Beta(),
                data = dat_coral_delta %>% 
                  filter(year %in% 2019:2020),
                init = 0,
                iter = 4000,
                warmup = 2000,
                chains = 4,
                cores = 4,
                control = list(adapt_delta = 0.95,
                               max_treedepth = 20),
                threads = threading(2, static = T),
                seed = 123,
                file = here("long_term/models/m_ccover_19_dhw"),
                backend = "cmdstanr")
```

```{r}
summary(m_ccover_19_dhw)# 4 div trans, 
pp_check(m_ccover_19_dhw, ndraws = 100)
bayes_R2(m_ccover_19_dhw)#.81
```

### Plot

```{r}
# make new data frame with sequence along max_DHW values
new_data_dhw <- expand_grid(max_dhw_29 = seq(min(dat_coral_delta$max_dhw_29)-0.1, 
                                     max(dat_coral_delta$max_dhw_29)+0.1, 
                                     length = 100),
                            year = factor(2019:2020))#

#predict
pred_dhw <-  epred_draws(m_ccover_19_dhw, newdata = new_data_dhw, re_formula = NA) %>% 
  ungroup() %>% 
  dplyr::select(max_dhw_29, .draw, .epred, year) %>% 
  pivot_wider(names_from = year, values_from = .epred) %>% 
  mutate(delta = 100*(`2020` - `2019`)/`2019`)

#summarise predictions
pred_dhwS <- pred_dhw %>% 
  group_by(max_dhw_29) %>% 
  summarise(median = median(delta, na.rm = T),
            l95 = quantile(delta, 0.025, na.rm = T),
            u95 = quantile(delta, 0.975, na.rm = T),
            
            l80 = quantile(delta, 0.1, na.rm = T),
            u80 = quantile(delta, 0.9, na.rm = T),
            
            l60 = quantile(delta, 0.2, na.rm = T),
            u60 = quantile(delta, 0.8, na.rm = T)) %>% 
  ungroup()

#calculate delta values
dat_sel_dhwS <- dat_coral_delta %>% 
  dplyr::select(marine_area, proportion, year, coast, max_dhw_29) %>% 
  filter(year %in% c(2019:2020)) %>% 
  pivot_wider(names_from = year, values_from = proportion, values_fn = mean) %>% 
  mutate(delta =  100*(`2020`- `2019`)/`2019`)  
  

#plot



plot_dhw <- pred_dhwS %>%
  ggplot(aes(x = max_dhw_29))+
  geom_hline(yintercept = 0, linetype = "11", col = "grey")+
  geom_ribbon(aes(ymin = l95, ymax = u95), alpha = .3, fill = "darkblue")+
  geom_ribbon(aes(ymin = l80, ymax = u80), alpha = .3, fill = "darkblue")+
  geom_ribbon(aes(ymin = l60, ymax = u60), alpha = .3, fill = "darkblue")+
  geom_line(aes(y = median), col = "skyblue", linewidth = 1)+
  geom_point(data = dat_sel_dhwS, aes(x = max_dhw_29, y = delta, fill = coast), 
             size = 2.5, shape = 21, col = "grey90")+
  scale_fill_manual(values = col_coast, name = NULL)+
  labs(y = expression(Delta~"Cover (%"~yr^-1*")"), x = expression(AHS[max]), tag = "A")+
  guides(fill=guide_legend(title="Coast"))+
  theme_andi()+
  theme(legend.position = "bottom",
        plot.title = element_text(face = "bold", hjust = 0.5))


plot_dhw
```

```{r}
ggsave(filename = "cover_regression_dhw.pdf",
       plot = plot_dhw, 
       path = here("long_term/plots/"),
       width = 15, height = 10, units  = "cm")
```

### Slope

Assuming linear relationship over whole course of max_DHW calculate slope between lowest max_DHW value and highest

```{r}
slope <- epred_draws(m_ccover_19_dhw, 
                         re_formula = NA,
                         newdata = 
  expand_grid(max_dhw_29 = c(min(dat_coral_delta$max_dhw_29),
                             max(dat_coral_delta$max_dhw_29)),
              year = factor(2019:2020))) %>% 
  ungroup() %>% 
  dplyr::select(max_dhw_29, year, .epred, .draw) %>% 
  pivot_wider(names_from = year, values_from = .epred) %>% 
  mutate(delta =  (`2020`- `2019`)/`2019`) %>% 
  dplyr::select(delta, max_dhw_29, .draw) %>% 
  pivot_wider(names_from = max_dhw_29, values_from = delta) %>% 
  mutate(slope_val = (`6.26471428571429` - `5.765`) / (6.26471428571429 - 5.765) )

slope %>%
  dplyr::select(slope_val) %>% 
  brms_summary()

above_0 <- length(which(slope$slope_val > 0))/nrow(slope) %>% 
  round(2)*100#0.3625 %



plot_slope<- slope %>%
  ggplot(aes(y = 1, 
             x = slope_val))+
  geom_density_ridges_gradient(fill = "#A4BED5FF")+
  geom_vline(xintercept = 0, linetype = "11")+
  labs(x = expression(Delta~"% cover"~AHS[max]^-1), y = "Density", tag = "B")+
  scale_fill_manual(values = cols, name = NULL)+
  theme_andi()+
  theme(legend.position = "none")+
  theme(axis.text.y=element_blank(),
        axis.ticks.y=element_blank())


plot_slope
```

```{r}
ggsave(filename = "plot_slope.pdf",
       plot = plot_slope, 
       path = here("long_term/plots/"),
       width = 8, height = 10, units  = "cm")
```

Combine

```{r}
plot_slope_both <- plot_dhw+plot_slope+ 
  plot_layout(widths = c(2, 1))
plot_slope_both
```

```{r}
ggsave(filename = "plot_slope_both.pdf",
       plot = plot_slope_both, 
       path = here("long_term/plots/"),
       width = 18, height = 10, units  = "cm")
```
