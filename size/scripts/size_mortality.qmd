---
title: "Size & Mortality"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(here)
library(brms)
library(tidybayes)
library(patchwork)
library(cmdstanr)
library(ggh4x)
library(fastDummies)
library(ggstance)
```

## Functions

```{r}

# theme for ggplot
theme_andi <- function(){
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(), 
        strip.background = element_blank(),
        axis.line = element_line(colour = "black" ))
}

#Function to predict & plot model data

pred_plot <- function(data, 
                      model, 
                      data_bin, 
                      title){
  
  
  
  #get maximum diameter
  max_dia <- data %>% 
    pull(dia) %>% 
    max()

  #predict parameters with new data along sequence of diameters and summarize
pred_mortality <- model %>%
  epred_draws(newdata = expand_grid(dia = seq(0, max_dia, length = 200),
                                    site = unique(data$site)),
              re_formula = NA) %>% 
  mutate(.epred = 1 - .epred) %>% #from survival to mortality?
  group_by(dia, site) %>% 
  summarise(median = median(.epred, na.rm = T),
            l95 = quantile(.epred, 0.025, na.rm = T),
            u95 = quantile(.epred, 0.975, na.rm = T),
            
            l80 = quantile(.epred, 0.1, na.rm = T),
            u80 = quantile(.epred, 0.9, na.rm = T),
            
            l60 = quantile(.epred, 0.2, na.rm = T),
            u60 = quantile(.epred, 0.8, na.rm = T)) %>% 
  ungroup()

# plot

plot_mortality <- pred_mortality %>%
  ggplot(aes(x = dia))+
  geom_bar(data = data_bin %>% 
             mutate(p_mort = ifelse(p_mort == 0, 0.01, p_mort)), aes(x = mid, y = p_mort, alpha = log(n_per_bin)), stat = "identity", show.legend = F)+
  geom_text(data = data_bin, aes(y = .05, x = mid, label = n_per_bin), col = "black", size = 3)+
  geom_ribbon(aes(ymin = l95, ymax = u95), alpha = .3, fill = "darkblue")+
  geom_ribbon(aes(ymin = l80, ymax = u80), alpha = .3, fill = "darkblue")+
  geom_ribbon(aes(ymin = l60, ymax = u60), alpha = .3, fill = "darkblue")+
  geom_line(aes(y = median), col = "skyblue")+
  facet_wrap(~site)+
  labs(y = "Probability of Mortality", x = expression("Colony diameter (cm)"), title = title)+
  xlim(0, 36)+ 
  guides(col=guide_legend(title="Outcome"), fill=guide_legend(title="Outcome"))+
  theme_andi()+
  theme(legend.position = "bottom",
        plot.title = element_text(face = "bold", hjust = 0.5))

print(plot_mortality)
return(plot_mortality)
}
```

## Data

### Get data

```{r}
# read data for mortality and raw data fo both sites
dat_mort_bin_HAA <- read.csv(here("size/data/dat_mort_bin_HAA.csv"))
dat_mort_HAA <- read.csv(here("size/data/dat_mort_HAA.csv"))

dat_mort_bin_E2B <- read.csv(here("size/data/dat_mort_bin_E2B.csv"))
dat_mort_E2B <- read.csv(here("size/data/dat_mort_E2B.csv"))

#and combine
dat_mort_bin <- bind_rows(dat_mort_bin_HAA, dat_mort_bin_E2B) %>% 
  mutate(site = recode(site, 
                       "HAA" = "Haapiti",
                       "E2B" = "Pihaena"))

dat_mort <- bind_rows(dat_mort_HAA, dat_mort_E2B) %>% 
  mutate(site = recode(site, 
                       "HAA" = "Haapiti",
                       "E2B" = "Pihaena"))
```

### Set up data

Select only Pocillopora, too few samples for Acropora

```{r}
dat_mort_bin <- dat_mort_bin %>% 
  filter(spec_1 == "Pocillopora")

dat_mort <- dat_mort %>% 
  filter(spec_1 == "Pocillopora")
```

## GAM model for each comparison

```{r}
m_surv_before <- brm(state ~  s(dia, by = site, k = 4) + (1|quadrat), 
              data = dat_mort %>% 
                filter(comparison == "2016_2018"),
              family = bernoulli(link = "cloglog"),
              iter = 4000,
              warmup = 2000,
              chains = 4,
              cores = 4,
              control = list(max_treedepth = 14, adapt_delta = 0.99),
              seed = 123,
              file = here("size/models/m_surv_before"),
              backend = "cmdstanr")

summary(m_surv_before)
pp_check(m_surv_before, ndraws = 100)
```

```{r}
m_surv_during <- brm(state ~  s(dia, by = site, k = 4) + (1|quadrat), 
              data = dat_mort %>% 
                filter(comparison == "2018_2020"),
              family = bernoulli(link = "cloglog"),
              iter = 4000,
              warmup = 2000,
              chains = 4,
              cores = 4,
              control = list(max_treedepth = 14, adapt_delta = 0.99),
              seed = 123,
              file = here("size/models/m_surv_during"),
              backend = "cmdstanr")

summary(m_surv_during)#1 div trans, ok
#plot(m_surv_before)
pp_check(m_surv_during, ndraws = 100)
```

```{r}
m_surv_after <- brm(state ~  s(dia, by = site, k = 4) + (1|quadrat), 
              data = dat_mort %>% 
                filter(comparison == "2020_2022"),
              family = bernoulli(link = "cloglog"),
              iter = 4000,
              warmup = 2000,
              chains = 4,
              cores = 4,
              control = list(max_treedepth = 14, adapt_delta = 0.99),
              seed = 123,
              file = here("size/models/m_surv_after"),
              backend = "cmdstanr")

summary(m_surv_after)
#plot(m_surv_after)
pp_check(m_surv_after, ndraws = 100)
```

## Plot

### 2016 - 2018

```{r}
plot_mortality_before <- pred_plot(data = dat_mort %>% 
                                     filter(comparison == "2016_2018"),
                              model = m_surv_before, 
                              data_bin = dat_mort_bin %>% 
                                     filter(comparison == "2016_2018"),
                              title = "Mortality 2016 - 2018")
```

### 2018 - 2020

```{r}
plot_mortality_during <- pred_plot(data = dat_mort %>% 
                                     filter(comparison == "2018_2020"),
                              model = m_surv_during, 
                              data_bin = dat_mort_bin %>% 
                                     filter(comparison == "2018_2020"),
                              title = "Mortality 2018 - 2020")
```

### 2020 - 2022

```{r}
plot_mortality_after <- pred_plot(data = dat_mort %>% 
                                     filter(comparison == "2020_2022"),
                              model = m_surv_after, 
                              data_bin = dat_mort_bin %>% 
                                     filter(comparison == "2020_2022"),
                              title = "Mortality 2020 - 2022")
```

### Combine plots

```{r}
plot_mortality = plot_mortality_before/plot_mortality_during/plot_mortality_after
plot_mortality
```

### Save

```{r}
ggsave(filename = "mortality_poci.pdf",
       plot = plot_mortality, 
       path = here("size/plots"),
       width = 30, height = 30, units = "cm")
```
